{"version":3,"sources":["components/header/Header.jsx","components/dates/Dates.jsx","components/dates/index.js","components/loadinganimation/index.js","components/loadinganimation/LoadingAnimation.jsx","components/mediatypevideo/index.js","components/mediatypevideo/MediaTypeVideo.jsx","components/mediatypeimage/index.js","components/mediatypeimage/MediaTypeImage.jsx","components/likebutton/index.js","components/likebutton/LikeButton.jsx","components/mediainfo/index.js","components/mediainfo/MediaInfo.jsx","components/card/index.js","components/card/Card.jsx","components/main/Main.jsx","components/footer/Footer.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Header","className","icon","faMeteor","faRocket","Dates","nasaEndpoint","nasaApiKey","onSelect","loadingMedia","useState","Date","startDate","setStartDate","updateMedia","parsedDate","a","fetch","then","response","json","dateData","console","log","LocalizationProvider","dateAdapter","DateAdapter","DatePicker","label","value","onChange","date","toISOString","slice","catch","err","finally","renderInput","params","TextField","LoadingAnimation","CircularProgress","MediaTypeVideo","media","width","height","src","url","title","frameBorder","allow","allowFullScreen","MediaTypeImage","hdurl","alt","explanation","LikeButton","FormControlLabel","control","Checkbox","checkedIcon","name","MediaInfo","onClick","Card","mediaType","setMediaType","useEffect","media_type","undefined","Main","loading","Footer","href","target","rel","App","selectedMedia","setSelectedMedia","setLoading","process","data","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0ebd151.chunk.js","sourcesContent":["//icon imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMeteor, faRocket } from '@fortawesome/free-solid-svg-icons'\nimport '../../App.css';\n\nconst Header = () => {\n   return (\n      <header className=\"App-header\" data-testid=\"header\">\n         <FontAwesomeIcon icon={ faMeteor } />\n         <h1>Spacestagram</h1>\n         <FontAwesomeIcon icon={ faRocket } />\n   </header>\n)};\n\nexport default Header;","import React, { useState } from 'react'\nimport DateAdapter from '@mui/lab/AdapterDateFns'\nimport { LocalizationProvider } from '@mui/lab' \nimport DatePicker from '@mui/lab/DatePicker'\nimport TextField from '@material-ui/core/TextField';\nimport '../../App.css';\n\nconst Dates = ({ nasaEndpoint, nasaApiKey, onSelect, loadingMedia }) => {\n\n   const [ startDate, setStartDate ] = useState(new Date())\n\n\n  const updateMedia = async (parsedDate) => {\n    return await fetch(`${nasaEndpoint}planetary/apod/?api_key=${nasaApiKey}&date=${parsedDate}`)\n    .then(response => {\n      return response.json()\n    }).then((dateData) => {\n      onSelect(dateData)\n      console.log(dateData)\n    })\n    }\n\n   const handleDateChange = (date) => {\n    loadingMedia(true)\n    setStartDate(date)\n      const parsedDate= date.toISOString().slice(0,10);\n      updateMedia(parsedDate)\n      .catch((err) => {\n        console.log(err)\n      })\n      .finally(() => {\n        loadingMedia(false)\n      })\n    }\n   return (\n   <>\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <DatePicker \n          label=\"Pick a date\"\n          value={startDate}\n          onChange={handleDateChange}\n          renderInput={(params) => <TextField {...params} />}\n        />\n    </LocalizationProvider>\n   </>\n   )\n};\n\nexport default Dates;","import Dates from './Dates'\n\nexport default Dates;","import LoadingAnimation from './LoadingAnimation'\n\nexport default LoadingAnimation;","import CircularProgress from '@mui/material/CircularProgress'\nimport '../../App.css';\n\nconst LoadingAnimation = () => {\n   return (\n      <CircularProgress />\n)};\n\nexport default LoadingAnimation;","import MediaTypeVideo from './MediaTypeVideo'\n\nexport default MediaTypeVideo;","import '../../App.css';\n\nconst MediaTypeVideo = ({ media }) => {\n   return (\n      <div className=\"video-wrapper\">\n         <iframe\n            width=\"100%\"\n            height=\"100%\"\n            src={media.url}\n            title=\"YouTube video\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen\n         >\n         </iframe>\n      </div>\n   )\n};\n\nexport default MediaTypeVideo;","import MediaTypeImage from './MediaTypeImage'\n\nexport default MediaTypeImage;","import '../../App.css';\n\nconst MediaTypeImage = ({ media }) => {\n   return (\n   <img src={media.hdurl} className=\"image\" alt={media.explanation} />   \n   )\n};\n\nexport default MediaTypeImage;","import LikeButton from './LikeButton'\n\nexport default LikeButton;","import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nconst LikeButton = () => {\n   return (\n      <FormControlLabel data-testid=\"button\"\n         control={<Checkbox icon={<FavoriteBorderIcon />} \n         checkedIcon={<FavoriteIcon />}\n         name=\"liked\" />}\n      />\n   )\n};\n\nexport default LikeButton","import MediaInfo from './MediaInfo'\n\nexport default MediaInfo;","import LikeButton from '../likebutton'\nimport '../../App.css';\n\nconst MediaInfo = ({ media }) => {\n\n   const hello = () => {\n      return \"hello\"\n   }\n\n   return (\n      <article className=\"container-media-info\" data-testid=\"mediaInfoContainer\">\n         <div className=\"media-info-header\">\n            <h2 className=\"title\" data-testid=\"title\">\n               {media.title}\n            </h2>\n            <LikeButton />\n         </div>\n         <p className=\"date\">\n            {media.date}\n         </p>\n         <p className=\"caption\">\n            {media.explanation}\n         </p>\n         <p onClick={hello} data-testId=\"testHello\">\n         </p>\n      </article>\n)\n};\n\nexport default MediaInfo;","import Card from './Card'\n\nexport default Card;","import React, { useState, useEffect } from 'react'\nimport LoadingAnimation from '../loadinganimation'\nimport MediaTypeVideo from '../mediatypevideo'\nimport MediaTypeImage from '../mediatypeimage'\nimport MediaInfo from '../mediainfo'\nimport '../../App.css';\n\nconst Card = ({ media }) => {\n\n   const [ mediaType, setMediaType ] = useState();\n\n   // reset media type when selected media changes\n   useEffect(()=> {\n      setMediaType(media.media_type);\n   }, [media.media_type]);\n\n\n   return (\n<>\n   { (mediaType!==undefined)\n      ? <section className=\"container-content\">\n         <div className=\"container-media\">\n            { (mediaType===\"video\") \n            ? <MediaTypeVideo media={media} />\n            : <MediaTypeImage media={media} />\n            }\n         </div>\n         <MediaInfo media={media} />\n      </section>\n   : <section className=\"container-content\">\n      <LoadingAnimation />\n   </section>\n   }\n</>\n)};\n\nexport default Card;","//icon imports\nimport Dates from '../dates'\nimport Card from '../card'\nimport LoadingAnimation from '../loadinganimation'\nimport '../../App.css';\n\nconst Main = ({nasaEndpoint, nasaApiKey, loading, onSelect, media, loadingMedia}) => {\n   return (\n      <main className=\"container-body\">\n        <Dates \n          nasaEndpoint={nasaEndpoint} nasaApiKey={nasaApiKey} \n          onSelect={onSelect}\n          loadingMedia={loadingMedia}\n        />\n        { (!loading)\n          ? <Card media={media} /> \n          : <LoadingAnimation /> \n        }\n      </main>\n)};\n\nexport default Main;","import '../../App.css';\n\nconst Footer = () => {\n   return (\n      <footer data-testid=\"footer\">\n        Built by <a href=\"https://katarzyna-kw.github.io/portfolio-website/\" target=\"blank\" rel=\"external\"> Katarzyna Wegrzynowicz</a> using <a href=\"https://api.nasa.gov/\" target=\"blank\" rel=\"external\">NASA APOD API</a>\n      </footer>\n   )\n};\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport Header from './components/header/Header'\nimport Main from './components/main/Main'\nimport Footer from './components/footer/Footer'\nimport './App.css';\n\nfunction App() {\n\n  const [ selectedMedia, setSelectedMedia ] = useState([]);\n  const [ loading, setLoading ] = useState(false);\n  const nasaEndpoint=process.env.REACT_APP_NASA_ENDPOINT\n  const nasaApiKey=process.env.REACT_APP_NASA_API_KEY\n\n\n  useEffect (() => {\n    setLoading(true)\n    fetch(`${nasaEndpoint}planetary/apod/?api_key=${nasaApiKey}`)\n    .then((response) => response.json())\n    .then((data) => {\n      setSelectedMedia(data)\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n    .finally(() => {\n      setLoading(false)\n    });\n  }, [nasaEndpoint, nasaApiKey]);\n\n  return (\n    <div className=\"App-body\" data-testid=\"app-body\">\n      <Header data-testid=\"header\"/>\n      <Main data-test id=\"main\" \n        nasaEndpoint={nasaEndpoint} \n        nasaApiKey={nasaApiKey} \n        onSelect={setSelectedMedia}\n        loadingMedia={setLoading}\n        media={selectedMedia}\n        loading={loading}\n      />\n      <Footer data-testid=\"footer\"/>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}