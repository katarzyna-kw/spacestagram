{"version":3,"sources":["components/Header.js","components/Dates.js","components/LoadingAnimation.js","components/Card.components/MediaTypeVideo.js","components/Card.components/MediaTypeImage.js","components/Card.components/LikeButton.js","components/Card.components/MediaInfo.js","components/Card.js","components/Main.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","icon","faMeteor","faRocket","Dates","nasaEndpoint","nasaApiKey","onSelect","loadingMedia","useState","Date","startDate","setStartDate","updateMedia","parsedDate","a","fetch","then","response","json","dateData","console","log","LocalizationProvider","dateAdapter","DateAdapter","DatePicker","label","value","onChange","date","toISOString","slice","catch","err","finally","renderInput","params","TextField","LoadingAnimation","MediaTypeVideo","media","width","height","src","url","title","frameBorder","allow","allowFullScreen","MediaTypeImage","hdurl","alt","explanation","LikeButton","FormControlLabel","control","Checkbox","checkedIcon","name","MediaInfo","Card","mediaType","setMediaType","useEffect","media_type","undefined","Main","loading","Footer","href","target","rel","App","selectedMedia","setSelectedMedia","setLoading","process","data","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7c94328.chunk.js","sourcesContent":["//icon imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMeteor, faRocket } from '@fortawesome/free-solid-svg-icons'\nimport '../App.css';\n\nexport const Header = () => {\n   return (\n      <header className=\"App-header\">\n         <FontAwesomeIcon icon={ faMeteor } />\n         <h1>Spacestagram</h1>\n         <FontAwesomeIcon icon={ faRocket } />\n   </header>\n)};","import React, { useState } from 'react'\nimport DateAdapter from '@mui/lab/AdapterDateFns'\nimport { LocalizationProvider } from '@mui/lab' \nimport DatePicker from '@mui/lab/DatePicker'\nimport TextField from '@material-ui/core/TextField';\nimport '../App.css';\n\nexport const Dates = ({ nasaEndpoint, nasaApiKey, onSelect, loadingMedia }) => {\n\n   const [ startDate, setStartDate ] = useState(new Date())\n\n\n  const updateMedia = async (parsedDate) => {\n    return await fetch(`${nasaEndpoint}planetary/apod/?api_key=${nasaApiKey}&date=${parsedDate}`)\n    .then(response => {\n      return response.json()\n    }).then((dateData) => {\n      onSelect(dateData)\n      console.log(dateData)\n    })\n    }\n\n   const handleDateChange = (date) => {\n    loadingMedia(true)\n    setStartDate(date)\n      const parsedDate= date.toISOString().slice(0,10);\n      updateMedia(parsedDate)\n      .catch((err) => {\n        console.log(err)\n      })\n      .finally(() => {\n        loadingMedia(false)\n      })\n    }\n   return (\n   <>\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <DatePicker \n          label=\"Pick a date\"\n          value={startDate}\n          onChange={handleDateChange}\n          renderInput={(params) => <TextField {...params} />}\n        />\n    </LocalizationProvider>\n   </>\n   )\n};","import '../App.css';\n\nexport const LoadingAnimation = () => {\n   return (\n      <aside className='loading'>\n         <div className=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div> \n      </aside>   \n)};","import '../../App.css';\n\nexport const MediaTypeVideo = ({ media }) => {\n   return (\n      <div className=\"video-wrapper\">\n         <iframe\n            width=\"100%\"\n            height=\"100%\"\n            src={media.url}\n            title=\"YouTube video\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen\n         >\n         </iframe>\n      </div>\n   )\n};","import '../../App.css';\n\nexport const MediaTypeImage = ({ media }) => {\n   return (\n   <img src={media.hdurl} className=\"image\" alt={media.explanation} />   \n   )\n};","import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nexport const LikeButton = () => {\n   return (\n      <FormControlLabel\n         control={<Checkbox icon={<FavoriteBorderIcon />} \n         checkedIcon={<FavoriteIcon />}\n         name=\"liked\" />}\n      />\n   )\n};","import { LikeButton } from './LikeButton'\nimport '../../App.css';\n\nexport const MediaInfo = ({ media }) => {\n   return (\n      <article className=\"container-media-info\">\n         <div className=\"media-info-header\">\n            <h2 className=\"title\">\n               {media.title}\n            </h2>\n            <LikeButton />\n         </div>\n         <p className=\"date\">\n            {media.date}\n         </p>\n         <p className=\"caption\">\n            {media.explanation}\n         </p>\n      </article>\n)\n};","import React, { useState, useEffect } from 'react'\nimport { LoadingAnimation } from './LoadingAnimation'\nimport { MediaTypeVideo } from './Card.components/MediaTypeVideo'\nimport { MediaTypeImage } from './Card.components/MediaTypeImage'\nimport { MediaInfo } from './Card.components/MediaInfo'\nimport '../App.css';\n\nexport const Card = ({ media }) => {\n\n   const [ mediaType, setMediaType ] = useState();\n\n   // reset media type when selected media changes\n   useEffect(()=> {\n      setMediaType(media.media_type);\n   }, [media.media_type]);\n\n\n   return (\n<>\n   { (mediaType!==undefined)\n      ? <section className=\"container-content\">\n         <div className=\"container-media\">\n            { (mediaType===\"video\") \n            ? <MediaTypeVideo media={media} />\n            : <MediaTypeImage media={media} />\n            }\n         </div>\n         <MediaInfo media={media} />\n      </section>\n   : <section className=\"container-content\">\n      <LoadingAnimation />\n   </section>\n   }\n</>\n)};","//icon imports\nimport { Dates } from './Dates'\nimport { Card } from './Card'\nimport { LoadingAnimation } from './LoadingAnimation'\nimport '../App.css';\n\nexport const Main = ({nasaEndpoint, nasaApiKey, loading, onSelect, media, loadingMedia}) => {\n   return (\n      <main className=\"container-body\">\n        <Dates \n          nasaEndpoint={nasaEndpoint} nasaApiKey={nasaApiKey} \n          onSelect={onSelect}\n          loadingMedia={loadingMedia}\n        />\n        { (!loading)\n          ? <Card media={media} /> \n          : <LoadingAnimation /> \n        }\n      </main>\n)};","import '../App.css';\n\nexport const Footer = () => {\n   return (\n      <footer>\n        Built by <a href=\"https://katarzyna-kw.github.io/portfolio-website/\" target=\"blank\" rel=\"external\"> Katarzyna Wegrzynowicz</a> using <a href=\"https://api.nasa.gov/\" target=\"blank\" rel=\"external\">NASA APOD API</a>\n      </footer>\n   )\n};","import React, { useState, useEffect } from 'react';\nimport { Header } from './components/Header'\nimport { Main } from './components/Main'\nimport { Footer } from './components/Footer'\nimport './App.css';\n\nfunction App() {\n\n  const [ selectedMedia, setSelectedMedia ] = useState([]);\n  const [ loading, setLoading ] = useState(false);\n  const nasaEndpoint=process.env.REACT_APP_NASA_ENDPOINT\n  const nasaApiKey=process.env.REACT_APP_NASA_API_KEY\n\n\n  useEffect (() => {\n    setLoading(true)\n    fetch(`${nasaEndpoint}planetary/apod/?api_key=${nasaApiKey}`)\n    .then((response) => response.json())\n    .then((data) => {\n      setSelectedMedia(data)\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n    .finally(() => {\n      setLoading(false)\n    });\n  }, [nasaEndpoint, nasaApiKey]);\n\n\n  return (\n    <div className=\"App-body\" data-testid=\"app-body\">\n      <Header data-testid=\"header\"/>\n      <Main data-test id=\"main\" \n        nasaEndpoint={nasaEndpoint} \n        nasaApiKey={nasaApiKey} \n        onSelect={setSelectedMedia}\n        loadingMedia={setLoading}\n        media={selectedMedia}\n        loading={loading}\n      />\n      <Footer data-testid=\"footer\"/>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}